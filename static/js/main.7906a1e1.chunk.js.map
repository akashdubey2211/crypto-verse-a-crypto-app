{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","className","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","coins","filteredData","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","to","id","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","Title","Typography","Homepage","globalStats","stats","level","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","description","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","href","rel","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7906a1e1.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value.toLowerCase())} />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link key={currency.id} to={`/crypto/${currency.id}`}>\n              <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\n// import News from './News';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n      {/* <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n        <Title level={3}><Link to=\"/news\">Show more</Link></Title>\n      </div>\n      <News simplified /> */}\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoworld</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        {/* <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item> */}\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Exchanges, Homepage, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            {/* <Route exact path=\"/news\">\n              <News />\n            </Route> */}\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\n          <Link to=\"/\">\n            Cryptoverse Inc.\n          </Link> <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\n// import { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    // [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}